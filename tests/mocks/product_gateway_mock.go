// Code generated by MockGen. DO NOT EDIT.
// Source: ./gateways/product_gateway.go

// Package mock_gateways is a generated GoMock package.
package mocks

import (
	adapters "food-app/domain/adapters"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIProductGateway is a mock of IProductGateway interface.
type MockIProductGateway struct {
	ctrl     *gomock.Controller
	recorder *MockIProductGatewayMockRecorder
}

// MockIProductGatewayMockRecorder is the mock recorder for MockIProductGateway.
type MockIProductGatewayMockRecorder struct {
	mock *MockIProductGateway
}

// NewMockIProductGateway creates a new mock instance.
func NewMockIProductGateway(ctrl *gomock.Controller) *MockIProductGateway {
	mock := &MockIProductGateway{ctrl: ctrl}
	mock.recorder = &MockIProductGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIProductGateway) EXPECT() *MockIProductGatewayMockRecorder {
	return m.recorder
}

// FindById mocks base method.
func (m *MockIProductGateway) FindById(id string) (adapters.IProduct, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindById", id)
	ret0, _ := ret[0].(adapters.IProduct)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindById indicates an expected call of FindById.
func (mr *MockIProductGatewayMockRecorder) FindById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindById", reflect.TypeOf((*MockIProductGateway)(nil).FindById), id)
}
