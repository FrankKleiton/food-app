// Code generated by MockGen. DO NOT EDIT.
// Source: ./domain/adapters/cart_gateway.go

// Package mock_adapters is a generated GoMock package.
package mocks

import (
	adapters "food-app/domain/adapters"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockICartGateway is a mock of ICartGateway interface.
type MockICartGateway struct {
	ctrl     *gomock.Controller
	recorder *MockICartGatewayMockRecorder
}

// MockICartGatewayMockRecorder is the mock recorder for MockICartGateway.
type MockICartGatewayMockRecorder struct {
	mock *MockICartGateway
}

// NewMockICartGateway creates a new mock instance.
func NewMockICartGateway(ctrl *gomock.Controller) *MockICartGateway {
	mock := &MockICartGateway{ctrl: ctrl}
	mock.recorder = &MockICartGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICartGateway) EXPECT() *MockICartGatewayMockRecorder {
	return m.recorder
}

// GetActiveCart mocks base method.
func (m *MockICartGateway) GetActiveCart() adapters.ICart {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetActiveCart")
	ret0, _ := ret[0].(adapters.ICart)
	return ret0
}

// GetActiveCart indicates an expected call of GetActiveCart.
func (mr *MockICartGatewayMockRecorder) GetActiveCart() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetActiveCart", reflect.TypeOf((*MockICartGateway)(nil).GetActiveCart))
}

// SaveCart mocks base method.
func (m *MockICartGateway) SaveCart(cart adapters.ICart) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveCart", cart)
	ret0, _ := ret[0].(bool)
	return ret0
}

// SaveCart indicates an expected call of SaveCart.
func (mr *MockICartGatewayMockRecorder) SaveCart(cart interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveCart", reflect.TypeOf((*MockICartGateway)(nil).SaveCart), cart)
}

// UpdateCart mocks base method.
func (m *MockICartGateway) UpdateCart(cart adapters.ICart) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateCart", cart)
	ret0, _ := ret[0].(bool)
	return ret0
}

// UpdateCart indicates an expected call of UpdateCart.
func (mr *MockICartGatewayMockRecorder) UpdateCart(cart interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCart", reflect.TypeOf((*MockICartGateway)(nil).UpdateCart), cart)
}
